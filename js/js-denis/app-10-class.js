
// ====== C—Ç–∞—Ä—ã–π –≤–∞—Ä–∏–∞–Ω—Ç===========

// function User(name) {
//  this.name = name;
//  let password = ''

//  this.getName = function() {
//     return this.name
//  }

//  this.getPasword = function(){
//     return password
//  }
//  this.setPassword = function (newPassword) {
//     password = newPassword
//  }

// }

// User.prototype.setName = function(name) {
//     this.name = name
// }

// function AdminUser(name) {
//     User.call(this, name)

//     this.isAdmin = true
// }

// const user1 = new User('Denis')
// const user2 = new User('Max')
// console.log(user1)
// console.log(user1.getName())
// console.log(user2)

// const admin = new AdminUser('Dima')

// console.log(admin)
// console.log(admin.getName())

// ====== –ù–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç ========


// class User {
//     constructor (name){
//         this.name = name
//     }
// getName(){
//     return this.name
// }

// setName(newName) {
//     return this.name = newName;
// }
// }

// const user = new User('Denis')

// class AdminUser extends User {
//     constructor(name) {
//         super(name)
//         this.isAdmin = true
//     }
// }

// const admin = new AdminUser('Dima')
// console.log(admin)


// ========–ó–∞–¥–∞—á–∞ 1==========
// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å—Å `Blogger` –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—å–µ–∫—Ç–∞ –±–ª–æ–≥–≥–µ—Ä–∞ —Å–æ —Å–ª–µ–¥—É—é—â–∏–º —Å–≤–æ–π—Å—Ç–≤–∞–º–∏:

// - `email` - –ø–æ—á—Ç–∞, —Å—Ç—Ä–æ–∫–∞
// - `age` - –≤–æ–∑—Ä–∞—Å—Ç, —á–∏—Å–ª–æ
// - `numberOfPosts` - –∫–æ–ª-–≤–æ –ø–æ—Å—Ç–æ–≤, —á–∏—Å–ª–æ
// - `topics` - –º–∞—Å—Å–∏–≤ —Ç–µ–º –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –±–ª–æ–≥–≥–µ—Ä

// –ö–ª–∞—Å—Å –æ–∂–∏–¥–∞–µ—Ç –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä - –æ–±—ä–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å –æ–¥–Ω–æ–∏–º—ë–Ω–Ω—ã–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏.

// –î–æ–±–∞–≤—å –º–µ—Ç–æ–¥ `getInfo()`, –∫–æ—Ç–æ—Ä—ã–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É:
// `User ${–ø–æ—á—Ç–∞} is ${–≤–æ–∑—Ä–∞—Å—Ç} years old and has ${–∫–æ–ª-–≤–æ –ø–æ—Å—Ç–æ–≤} posts`.

// –î–æ–±–∞–≤—å –º–µ—Ç–æ–¥ `updatePostCount(value)`, –∫–æ—Ç–æ—Ä—ã–π –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ `value` –ø—Ä–∏–Ω–∏–º–∞–µ—Ç
// –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

// class User {
//     constructor(config) {
//         const {email, age, blog} = config
//         const {numberOfPost, topics} = blog
//         this.email = email
//         this.age = age
//         this.numberOfPost = numberOfPost
//         this.topics = topics
//     }

//     getInfo (){
//         const {email, age, numberOfPost} = this
//         return `User ${email} is ${age} years old and has ${numberOfPost} posts`
//     }

// updatePostCount(value) {
//     this.numberOfPost = value
// }

// }

// const mango  =new User({
//     email: 'mango@mail.com',
//     age: 24,
//     blog: {
//     numberOfPost: 20,
//     topics: ['tech', 'cooking'],
// }
// });

// console.log(mango.getInfo())


// ========–ó–∞–¥–∞—á–∞ 2==========
// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å—Å `Storage` –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç –æ–±—ä–µ–∫—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–º —Ç–æ–≤–∞—Ä–æ–≤.
// –ü—Ä–∏ –≤—ã–∑–æ–≤–µ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç - –Ω–∞—á–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤ —Ç–æ–≤–∞—Ä–æ–≤, –∏ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å
// –µ–≥–æ –≤ —Å–≤–æ–π—Å—Ç–≤–æ `items`.

// class Storage {
//     constructor(items) {
//         this.items = items
//     }
// getItem() {
//     return this.items
// }

// addItems(item) {
//     this.items. push(item)
// }

// removeItem(item) {
    // –í–∞—Ä–∏–∞–Ω—Ç 1
    // const index = this.items.indexOf(item)
    // console.log(index)
    // this.items.push(index, 1)
    // console.log(this.items)

     // –í–∞—Ä–∏–∞–Ω—Ç 2
//      this.items = this.items.filter((el) => el !==item)
//      console.log(this.items)
// }


// }

// const storage = new Storage(['üçé', 'üçã', 'üçá', 'üçë']);
// console.log(storage);

// storage.removeItem('üçá')

// ========–ó–∞–¥–∞—á–∞ 3==========
// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å—Å `User` –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç –æ–±—ä–µ–∫—Ç —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ `login` –∏ `email`.
// –û–±—ä—è–≤–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ `#login` –∏ `#email`, –¥–æ—Å—Ç—É–ø –∫ –∫–æ—Ç–æ—Ä—ã–º —Å–¥–µ–ª–∞–π —á–µ—Ä–µ–∑
// –≥–µ—Ç—Ç–µ—Ä –∏ —Å–µ—Ç—Ç–µ—Ä `login` –∏ `email`.

// class User {
//     #login
//     #email

//     constructor(login, email){
//         this.#email = email
//         this.#login = login
//         this._isAdmin = true
        //    this. lastChanges = [email]
//     }
// get email(){
//     return this.#email
// }

// set email(value) {
    // if (!value) throw new Error('Some message')
    // this.lastChanges.push(value)
//    this.#email = value
// }

// get login(){
//     return this.#login
// }

// set login(value) {
//    this.#login = value
// }
// }

// const mango = new User({
//     login: 'Mango',
//     email: 'mango@dog.woof',
// });

// mango.email = 'new@new.com'
// mango.email = 'new2@new2.com'

// console.log(mango)

// ========–ó–∞–¥–∞—á–∞ 4==========

// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å—Å `Notes` –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π –∑–∞–º–µ—Ç–æ–∫ –≤ —Å–≤–æ–π—Å—Ç–≤–µ `items`.
// –ó–∞–º–µ—Ç–∫–∞ —ç—Ç–æ –æ–±—ä–µ–∫—Ç —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ `text` –∏ `priority`. –î–æ–±–∞–≤—å –∫–ª–∞—Å—Å—É —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ
// —Å–≤–æ–π—Å—Ç–≤–æ `Priority`, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –æ–±—ä–µ–∫—Ç —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏.

class Notes {
static Priority = {
    LOW: 'Low',
    NORMAL: 'normal',
    HIGH: 'high'
}

    constructor(items) {
        this.items = items
    }

    addNote({text, priority = Notes.Priority.LOW}) {
        this.items.push({text, priority})
    }

removeNote (text) {
    const index = this.items.findIndex((note) => note.text === text)
    if (index === -1) return
   this.items.splice(index, 1)
}

updateNote(text, Priority){
    const index = this.items.findIndex((note) => note.text === text)
    if (index === -1) return
    // –í–∞—Ä–∏–∞–Ω—Ç 1
    // const updatedNote = {text, priority}
    // this.items.splice(index, 1, updatedNote)
    // –í–∞—Ä–∏–∞–Ω—Ç 2 - –ª—É—á—à–∏–π
    // console.log(this.items[index])
    
    this.items[index] = {text, priority}
    // –í–∞—Ä–∏–∞–Ω—Ç 3
    // this.items[index].priority = priority
}

}

const myNotes = new Notes([]);

myNotes.addNote({
    text: '–ú–æ—è –ø–µ—Ä–≤–∞—è –∑–∞–º–µ—Ç–∫–∞',
priority: Notes.Priority.NORMAL
 });

myNotes.removeNote('–ú–æ—è –ø–µ—Ä–≤–∞—è –∑–∞–º–µ—Ç–∫–∞')
console.log(myNotes.items);

myNotes.updateNote('–ú–æ—è –ø–µ—Ä–≤–∞—è –∑–∞–º–µ—Ç–∫–∞222', Notes.Priority.HIGH)
console.log(myNotes.items);
